/***
 *      批量复制方法：copyWithin()
 *      使用copyWithin()方法可以向一个已有的数组中复制并粘贴全部或部分相同的值。
 * 
 *      参数：
 *          （1）第一个参数永远是【要插入位置的起始索引值】。
 *              注意不要和表示要复制内容位置的索引混淆。
 *          （2）第二个参数可选，表示复制处的开始索引。
 *              如果不提供开始索引，默认从索引为0处开始填充。
 *          （3）第三个参数可选，表示复制处的结束索引。
 *              如果不提供结束索引，则一直复制到数组末尾。
 * 
 *      另，负值索引从数组末尾开始计算。
 *      也可以将负索引想象成数组长度加上它得到的一个正索引。
 */

let arr;
let reset = ()=> arr = [0,1,2,3,4,5,6,7,8,9];
reset();

//从索引为5的位置开始粘贴整个数组的内容
ints.copyWithin(5);
console.log(ints); // [0, 1, 2, 3, 4, 0, 1, 2, 3, 4]
reset();

//从索引为0的位置开始粘贴、从索引为5开始往后复制的内容
ints.copyWithin(0, 5);
console.log(ints); // [5, 6, 7, 8, 9, 5, 6, 7, 8, 9]
reset();

//复制索引0开始到索引3结束的内容，插入到索引4开始的位置
ints.copyWithin(4, 0, 3);
alert(ints); // [0, 1, 2, 3, 0, 1, 2, 7, 8, 9]
reset();

// JavaScript 引擎在插值前会【完整复制范围内的值】
// 因此复制期间不存在重写的风险
ints.copyWithin(2, 0, 6);
alert(ints); // [0, 1, 0, 1, 2, 3, 4, 5, 8, 9]
reset();

/**
 * 对于负值索引、索引过低、索引过高、索引反向、索引部分可用的规则同fill()方法。
 */